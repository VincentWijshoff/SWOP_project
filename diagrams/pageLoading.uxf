<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLSequenceAllInOne</id>
    <coordinates>
      <x>16</x>
      <y>0</y>
      <w>1176</w>
      <h>440</h>
    </coordinates>
    <panel_attributes>title=Load page from pressing ENTER in addressbar
obj=User~a ACTOR EXECUTION
obj=:CanvasWindow~e EXECUTION
obj=:Window~b EXECUTION
obj=:AddressBar~c EXECUTION

a-&gt;&gt;&gt;e : ENTER;
e-&gt;&gt;&gt;b : handleKeyEvent(keyID, keyCode, keyChar, modifiers);

b-&gt;&gt;&gt;c : handleKeyboardEvent(keyID, keyCode, keyChar, modifiers);
c.&gt;b : True;
b-&gt;&gt;&gt;c : getAddress(); 
c.&gt;b : address;
b-&gt;&gt;&gt;b + : this.load(address)
tick=
ref=b b :Load page from given URL
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLSequenceAllInOne</id>
    <coordinates>
      <x>8</x>
      <y>456</y>
      <w>1176</w>
      <h>416</h>
    </coordinates>
    <panel_attributes>title=Load page from clicking outside of addressbar after typing in adressbar
obj=User~a ACTOR EXECUTION
obj=:CanvasWindow~e EXECUTION
obj=:Window~b EXECUTION
obj=:AddressBar~c EXECUTION


a-&gt;&gt;&gt;e : Mouse Click;
e-&gt;&gt;&gt;b : handleMouseEvent(ID, x, y, clickCount, button, modifiers);
b-&gt;&gt;&gt;c : setOutFocus();
c.&gt;b : True;
b-&gt;&gt;&gt;c : getAddress();
c.&gt;b : address;
b-&gt;&gt;&gt;b + : this.load(address)
tick=
ref=b b :Load page from given URL</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLSequenceAllInOne</id>
    <coordinates>
      <x>0</x>
      <y>872</y>
      <w>1104</w>
      <h>488</h>
    </coordinates>
    <panel_attributes>title=Load page from clicking on a url in the document area
obj=User~a ACTOR EXECUTION
obj=:CanvasWindow~e EXECUTION
obj=:Window~b EXECUTION
obj=:DocumentArea~d EXECUTION
obj=:GUIObject {abstract}~c EXECUTION

a-&gt;&gt;&gt;e : Mouse Click;
e-&gt;&gt;&gt;b : handleMouseEvent(ID, x, y, clickCount, button, modifiers);
b-&gt;&gt;&gt;d : handleMouseEvent(ID, x, y);
combinedFragment=loop~loopid d c
		d:[ GUIObject obj : this.DocGUIObjects ]
		combinedFragment=opt~l2 d c
		d:[ isInGUIObject(X, Y) ];
		d-&gt;&gt;&gt;c : handleClick(); 
		ref=c c :GUIObject handleClick
		--=l2
	--=loopid
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLSequenceAllInOne</id>
    <coordinates>
      <x>8</x>
      <y>2096</y>
      <w>2272</w>
      <h>576</h>
    </coordinates>
    <panel_attributes>title= Load page from given URL
obj=:Window~a EXECUTION
obj=:AddressBar~b EXECUTION
obj=:DocumentArea~c EXECUTION
obj=BrowsrDocumentValidator~f 
obj=:HtmlLoader~d CREATED_LATER EXECUTION
obj=:HtmlLexer~e CREATED_LATER EXECUTION

found-&gt;a : load(URL);

a-&gt;&gt;&gt;b : setAddress(URL);
b-&gt;b + : this.address = URL;
tick=

a-&gt;&gt;&gt;c : loadAddress(URL);
c-&gt;c + : this.DocGUIObjects.clear();
tick=
c-&gt;&gt;&gt;f : assertIsValidBrowsrDocument(URL);

c-&gt;&gt;&gt;d : new HtmlLoader(URL);

d-&gt;&gt;&gt;d + : loadHtml(URL);
tick=

c-&gt;&gt;&gt;d : loadPage();
d-&gt;&gt;&gt;e : new HtmlLexer();

ref=d e : Load and Lex html

a-&gt;&gt;&gt;a + : this.repaint();
tick=
a-&gt;&gt;&gt;b : draw(Graphics);

a-&gt;&gt;&gt;c : draw(Graphics);
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLSequenceAllInOne</id>
    <coordinates>
      <x>8</x>
      <y>1392</y>
      <w>304</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>title=GUIObject handleClick
obj=:GUIString~a EXECUTION

found-&gt;a : handleClick();
a-&gt;lost: return;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLSequenceAllInOne</id>
    <coordinates>
      <x>336</x>
      <y>1392</y>
      <w>304</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>title=GUIObject handleClick
obj=:GUIRectangle~a EXECUTION

found-&gt;a : handleClick();
a-&gt;lost: return;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLSequenceAllInOne</id>
    <coordinates>
      <x>8</x>
      <y>1568</y>
      <w>1768</w>
      <h>496</h>
    </coordinates>
    <panel_attributes>title=GUIObject handleClick
obj=:GUILink~a EXECUTION
obj=:DocumentArea~b EXECUTION
obj=:Window~c EXECUTION
obj=:AddressBar~d EXECUTION

found-&gt;a : handleClick();
a-&gt;&gt;&gt;b: getAddress();
b-&gt;&gt;&gt;c: getAddress();
c-&gt;&gt;&gt;d: getAddress();
d.&gt;c: address;
c.&gt;b: address;
b.&gt;a:address;
a-&gt;&gt;&gt;a + :newAddress = this.getModifiedAddress(address, this.href);
tick=
a-&gt;&gt;&gt;b: load(newAddress);
b-&gt;&gt;&gt;c:load(newAddress);
ref=c c :Load page from given URL</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLSequenceAllInOne</id>
    <coordinates>
      <x>8</x>
      <y>2904</y>
      <w>1832</w>
      <h>952</h>
    </coordinates>
    <panel_attributes>title=Load and Lex html
obj=:HtmlLoader~a EXECUTION
obj=:HtmlLexer~b CREATED_LATER EXECUTION
obj=:Hyperlink~c CREATED_LATER EXECUTION
obj=:HtmlTable~e CREATED_LATER EXECUTION
obj=:DocumentArea~d EXECUTION

found-&gt;a : loadPage();
a-&gt;&gt;&gt;b : lexer = new HtmlLexer(htmlCode);

a-&gt;&gt;&gt;b : type = getTokenType();

a-&gt;&gt;&gt;b : value = getTokenValue();

combinedFragment=loop~loopid a b
	a : [ type != HtmlLexer.TokenType.END_OF_FILE ]
	combinedFragment=opt~loop1 a b;
	a: [ type == HtmlLexer.TokenType.OPEN_START_TAG ]
		combinedFragment=alt~loop2 a b; a: [ value.equals("a") ]
			a-&gt;&gt;&gt;c : tag = new Hyperlink();
			a-&gt;&gt;&gt;b :eatToken();
			
			a-&gt;&gt;&gt;a + : lexer = updateATag(lexer, tag);
			tick=
			a-&gt;&gt;&gt;d : addGUIObjects(tag); 
			
		..=loop2 ; a : [ isTable(value) ]
			a-&gt;&gt;&gt;e : table = new HtmlTable();
			a-&gt;&gt;&gt;b :eatToken();
			
			a-&gt;&gt;&gt;a + : lexer = updateTableTag(lexer, table;
			tick=
			a-&gt;&gt;&gt;d : addGUIObjects(table); 
			
		--=loop2
	--=loop1
	a-&gt;&gt;&gt;b : eatToken();

	a-&gt;&gt;&gt;b : type = getTokenType();

	a-&gt;&gt;&gt;b : value = getTokenValue();

	--=loopid
a-&gt;lost: return;
</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
